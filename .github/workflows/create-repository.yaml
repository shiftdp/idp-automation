name: Create Repository
on:
  workflow_dispatch:
    inputs:
      port_payload:
        required: true
        description: "Port's payload, including details for who triggered the action and general context (blueprint, run id, etc...)"
        type: string
      name:
        required: true
        description: "Repository name"
        type: string
      language:
        required: true
        description: "Language"
        type: string

permissions: write-all

jobs:
  create-repo:
    runs-on: ubuntu-latest
    steps:

      - name: Log Start
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: "Start creating the repository üèÉ‚Äç‚ôÇÔ∏è."

      - uses: actions/checkout@v3
        with:
          path: "./idp-automation"
          persist-credentials: false
          fetch-depth: 0

      - name: list
        run: |
          ls

      - uses: actions/checkout@v3
        with:
          repository: "shiftdp/argocd-management"
          path: "./argocd-management"
          persist-credentials: false
          ref: main
          fetch-depth: 0

      - name: Copy and edit template
        run: |
          REPO_FILE_PATH=./argocd-management/environments/production/services/${{ inputs.name }}-repository.yaml
          MICROSERVICE_FILE_PATH=./argocd-management/environments/development/applications/${{ inputs.name }}-microservice.yaml
          cp idp-automation/templates/repository.yaml $REPO_FILE_PATH
          yq --inplace ".metadata.name = \"${{ inputs.name }}-repository\"" $REPO_FILE_PATH
          yq --inplace ".metadata.labels.language = \"${{ inputs.language }}\"" $REPO_FILE_PATH
          cp idp-automation/templates/microservice.yaml $MICROSERVICE_FILE_PATH
          yq --inplace ".metadata.name = \"${{ inputs.name }}-microservice\"" $MICROSERVICE_FILE_PATH
          yq --inplace ".spec.source.repoURL = \"https://github.com/shiftdp/${{ inputs.name }}-repository\"" $MICROSERVICE_FILE_PATH

      - name: Commit changes
        run: |
          cd argocd-management
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Deploy ${{ inputs.name }}-repository"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          directory: ./argocd-management
          repository: shiftdp/argocd-management
          github_token: ${{ secrets.REPO_SECRET }}
          branch: ${{ github.ref }}
          # force: true

      - name: Create workflow run entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: UPSERT
          identifier: ${{ inputs.name }}-repository
          title: ${{ inputs.name }}-repository
          blueprint: repo
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          properties: |
            {
              "name": "${{ inputs.name }}-repository",
              "triggeringActor": "${{ github.actor }}",
              "language": "${{ inputs.language }}",
              "status": "success",
              "conclusion": "success",
              "link": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }

      - name: Finish Port action
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          status: SUCCESS
          summary: service deployed
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: "Service deployment is complete ‚úÖ."
          link: '["${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"]'
