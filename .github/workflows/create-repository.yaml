name: Create Repository
on:
  workflow_dispatch:
    inputs:
      port_payload:
        required: true
        description: "Port's payload, including details for who triggered the action and general context (blueprint, run id, etc...)"
        type: string
      name:
        required: true
        description: "Repository name"
        type: string
      language:
        required: true
        description: "Language"
        type: string
jobs:
  create-repo:
    runs-on: ubuntu-latest
    steps:

      - name: Log Start
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: "Start to create reposiotry üèÉ‚Äç‚ôÇÔ∏è"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/checkout@v3
        with:
          repository: "shiftdp/argocd-management"
          ref: main
          fetch-depth: 0

      - name: list
        run: |
          ls
          exit 0

      - name: Log Start
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: "Here we are ‚úÖ"

      - name: Test echo
        run: |
          FILE_PATH=apps/${NAME}-${ENVIRONMENT}.yaml
          cp argocd/app-template.yaml $FILE_PATH
          yq --inplace ".metadata.name = \"${NAME}\"" $FILE_PATH
          yq --inplace ".spec.source.repoURL = \"https://github.com/${REPO_ORG}/${REPO_NAME}.git\"" $FILE_PATH
          yq --inplace ".spec.source.path = \"kustomize/overlays/${ENVIRONMENT}\"" $FILE_PATH
          yq --inplace ".spec.destination.namespace = \"${ENVIRONMENT}\"" $FILE_PATH

      - name: Create workflow run entity
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: UPSERT
          identifier: id-notification-service-deploy-prod-${{ github.run_id }}
          title: tit-notification-service-deploy-prod-${{ github.run_id }}
          blueprint: repo
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          properties: |
            {
              "name": "${{ inputs.name }}",
              "triggeringActor": "${{ github.actor }}",
              "status": "success",
              "conclusion": "success",
              "link": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }

      - name: Finish Port action
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          status: SUCCESS
          summary: service deployed
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: "Service deployment complete ‚úÖ"
          link: '["${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"]'